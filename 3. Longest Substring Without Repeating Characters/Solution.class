/*采用HashMap，边对HashMap赋值，边查找是否有相同的字符，并记录下最大的不同字符个数，其中把value赋值为相应字符下标的加1，目的是为了如果碰到相同的字符时，
让起始位置向后移一位。不同字符的子字符串的长度为：j-i+1，取最大值的方法为Math.max()。
*/
class Solution {
    public int lengthOfLongestSubstring(String s) {
        Map<Character,Integer> map=new HashMap<>(); 
        int count=0;
        for(int i=0,j=0;j<s.length();j++){
            if(map.containsKey(s.charAt(j))){
                i=Math.max(map.get(s.charAt(j)),i);
            }
            count=Math.max(count,j-i+1);
            map.put(s.charAt(j),j+1);
        }
        return count;
    }
}
